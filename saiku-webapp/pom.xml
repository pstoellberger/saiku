<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>saiku</artifactId>
		<groupId>org.saiku</groupId>
		<version>3.0-PSTOELLBERGER-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.saiku</groupId>
	<artifactId>saiku-webapp</artifactId>
	<version>3.0-PSTOELLBERGER-SNAPSHOT</version>
	<name>saiku - webapp</name>
	<packaging>war</packaging>

	<build>
		<plugins>
		<plugin>            
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-war-plugin</artifactId>
		  <configuration>
		    <webXml>src\main\webapp\WEB-INF\web.xml</webXml>        
		  </configuration>
		</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>create-package</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<zip destfile="target/${project.artifactId}-${project.version}.war">
									<zipfileset dir="target/${project.artifactId}-${project.version}/" />
								</zip>
								<copy todir="target/${project.artifactId}-foodmart-${project.version}">
									<fileset dir="target/${project.artifactId}-${project.version}/" />
								</copy>
								<unzip
									dest="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart.zip" />
									</fileset>
								</unzip>
								<unzip
									dest="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/saiku-repository">
									<fileset dir="${basedir}/../util/">
										<include name="Examples.zip" />
									</fileset>
								</unzip>
								<copy
									todir="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/foodmart/"
									overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="FoodMart.xml" />
									</fileset>
								</copy>
								<copy
									todir="target/${project.artifactId}-foodmart-${project.version}/WEB-INF/classes/saiku-datasources/"
									overwrite="true">
									<fileset dir="${basedir}/../util/">
										<include name="foodmart" />
									</fileset>
								</copy>
								<zip
									destfile="target/${project.artifactId}-foodmart-${project.version}.war">
									<zipfileset
										dir="target/${project.artifactId}-foodmart-${project.version}/" />
								</zip>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>surefire-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.saiku</groupId>
            <artifactId>saiku-service</artifactId>
        </dependency>
        <dependency>
            <groupId>org.saiku</groupId>
            <artifactId>saiku-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.saiku</groupId>
            <artifactId>saiku-olap-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.saiku</groupId>
            <artifactId>saiku-query</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
        </dependency>
        <!--<dependency>
         <groupId>com.sun.jersey</groupId>
         <artifactId>jersey-json</artifactId>
         </dependency>-->
        <dependency>
            <groupId>org.jvnet.mimepull</groupId>
            <artifactId>mimepull</artifactId>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-math</groupId>
            <artifactId>commons-math</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
            <version>2.0.4.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        
    </dependencies>
	<reporting>
		<plugins>
            <!-- Produce Source cross references -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
            <!-- Unit tests report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <!-- "Release Audit" report (checks license headers etc.) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rat-maven-plugin</artifactId>
                <version>1.0-alpha-3</version>
            </plugin>
            <!-- FindBugs Report -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <threshold>Normal</threshold>
                    <effort>Default</effort>
                </configuration>
            </plugin>
		</plugins>
	</reporting>
</project>
